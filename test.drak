def factorial(n) {
    if n == 1 {
        return 1;
    }

    return n * factorial(n - 1);
}

def fibonacci(n) {
    a = 0;
    b = 1;
    i = 0;

    while i < n {
        c = a;
        a = b;
        b = a + c;
        i = i + 1;
    }

    return b;
}

def test_math() {
    n = 100*(3+(15+3*6))/((3*(4-2)-1)*10);

    return n == 72;
}

def with_inner(n) {
    def inner(n) {
        return 2*n;
    }

    return 2*inner(n);
}

def higher_order(func, n) {
    return func(n + 2);
}
def hof(func, n) {
    return func(n*n);
}

def fac2(n) {
    def facc(n, acc) {
        if n == 1 { return 1; }
        return facc(n - 1, acc * n)
    }

    return facc(n, 1);
}

fac2(4);